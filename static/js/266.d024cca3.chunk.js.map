{"version":3,"file":"static/js/266.d024cca3.chunk.js","mappings":"mLACA,MAAoC,kCAApC,EAA8E,sBAA9E,EAA4G,sB,2BCE7F,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,mCAEE,kBACEC,KAAK,OACLC,KAAK,SACLH,UAAWC,EACXG,SAAU,SAAAC,GAAC,OAAIP,GAASQ,EAAAA,EAAAA,IAAUD,EAAEE,OAAOC,OAAhC,QAKpB,CClBD,MAAwB,oBAAxB,EAAoD,oBAApD,EAA8E,kB,SCCjEC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACxBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,ECEpB,SAASC,IACtB,IAAMjB,GAAWC,EAAAA,EAAAA,MACXY,GAAWK,EAAAA,EAAAA,IAAYP,GAiB7B,OACE,kBAAMQ,SAjBS,SAAAZ,GACfA,EAAEa,iBACF,IAAMC,EAAOd,EAAEe,cACTjB,EAAOgB,EAAKE,SAASlB,KAAKK,MAC1Bc,EAASH,EAAKE,SAASC,OAAOd,MAC9Be,EAAU,CAAEpB,KAAMA,EAAMmB,OAAQA,GAEtC,GADyBX,EAASa,MAAK,SAAAC,GAAI,OAAIA,EAAKtB,OAASA,CAAlB,IAEzC,OAAOuB,MAAM,GAAD,OAAIvB,EAAJ,4BAEZL,GAAS6B,EAAAA,EAAAA,IAAgBJ,IAEzBJ,EAAKS,OAER,EAGC,WACE,mBAAO5B,UAAWC,EAAlB,kBAEE,kBACEC,KAAK,OACLC,KAAK,OACL0B,YAAY,OACZ7B,UAAWC,EACX6B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOhC,UAAWC,EAAlB,mBAEE,kBACEC,KAAK,MACLC,KAAK,SACL0B,YAAY,SACZ7B,UAAWC,EACX6B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ9B,KAAK,SAASF,UAAWC,EAAjC,2BAKL,CCtDD,OAAgB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,uB,SCUjG,SAASgC,IACtB,IAAMnC,GAAWC,EAAAA,EAAAA,MAEXY,GAAWK,EAAAA,EAAAA,IAAYP,GAEvBK,GAASE,EAAAA,EAAAA,IAAYH,IAE3BqB,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,IAaJ,OACE,iBAAKE,UAAWC,EAAAA,UAAhB,WACE,SAACc,EAAD,KACA,sCACA,SAAClB,EAAD,KACA,eAAIG,UAAWC,EAAAA,KAAf,SAZmB,WACrB,IAAMmC,EAAmBzB,EAASG,QAAO,SAAAS,GAAO,OAC9CA,EAAQpB,KAAKkC,cAAcC,SAASxB,EAAOuB,cADG,IAIhD,MAAkB,KAAXvB,EAAgBH,EAAWyB,CACnC,CAOMG,GAAiBC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAItC,EAAmB,EAAnBA,KAAMmB,EAAa,EAAbA,OACjC,OACE,gBAAa,WAAUmB,EAAIzC,UAAWC,EAAAA,KAAtC,WACE,kBAAMD,UAAWC,EAAAA,KAAjB,UAA4BE,EAA5B,QACA,0BAAOmB,KAEP,mBACEtB,UAAWC,EAAAA,IACXyC,QAAS,YAzBC,SAAAD,GACtB3C,GAAS6C,EAAAA,EAAAA,IAAmBF,GAC7B,CAwBeG,CAAgBH,EACjB,EAJH,sBAJOA,EAcZ,QAIR,C","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","redux/contacts/selectors.js","components/Form/Form.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filter__container\":\"Filter_filter__container__yLJ5F\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from 'components/Filter/Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.filter__container}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className={css.input}\n          onChange={e => dispatch(addFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"btn\":\"Form_btn__0ebGo\"};","export const selectLoading = state => state.tasks.loading;\n\nexport const getContactsState = state => state.contacts.items;\nexport const getFilterState = state => state.filter;\n","import css from 'components/Form/Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { getContactsState } from 'redux/contacts/selectors';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsState);\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contact = { name: name, number: number };\n    const dublicateContact = contacts.find(item => item.name === name);\n    if (dublicateContact) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContactThunk(contact));\n\n      form.reset();\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n          className={css.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"number\"\n          className={css.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__OonZI\",\"item\":\"Contacts_item__Wd-I-\",\"name\":\"Contacts_name__GF-Fo\",\"btn\":\"Contacts_btn__RQTAr\"};","import Filter from 'components/Filter/Filter';\nimport Form from 'components/Form/Form';\nimport css from './Contacts.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsState, getFilterState } from 'redux/contacts/selectors';\nimport {\n  deleteContactThunk,\n  getContactsThunk,\n} from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContactsState);\n\n  const filter = useSelector(getFilterState);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  const filterContacts = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return filter === '' ? contacts : filteredContacts;\n  };\n  return (\n    <div className={css.container}>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ul className={css.list}>\n        {filterContacts().map(({ id, name, number }) => {\n          return (\n            <li key={id} data-key={id} className={css.item}>\n              <span className={css.name}>{name} </span>\n              <span>{number}</span>\n\n              <button\n                className={css.btn}\n                onClick={() => {\n                  onDeleteContact(id);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Filter","dispatch","useDispatch","className","css","type","name","onChange","e","addFilter","target","value","getContactsState","state","contacts","items","getFilterState","filter","Form","useSelector","onSubmit","preventDefault","form","currentTarget","elements","number","contact","find","item","alert","addContactThunk","reset","placeholder","pattern","title","required","Contacts","useEffect","getContactsThunk","filteredContacts","toLowerCase","includes","filterContacts","map","id","onClick","deleteContactThunk","onDeleteContact"],"sourceRoot":""}